import fab

title('Align Bounds')
# Align the shape to the reference_shape (using bounds):
# 0 - none
# 1 : align center center
# +2 / -2 : our min/max to ref-center "tangent-to-center"
# +3 / -3 : align max to max, or min to min. i.e. "inside"
# +4 / -4 : align our center to ref-min/max "half in"
# +5 / -5 : align min to max, or max to min. i.e. "outside"

input('move_shape', fab.types.Shape)
input('ref_shape', fab.types.Shape)
input('x_align',int)
input('y_align',int)
input('z_align',int)

def align(direction, ref_min,ref_max,move_min,move_max):
    dd=0
    if direction == -3:
        dd = ref_min - move_min
    elif direction == 3:
        dd = ref_max - move_max
    elif direction == -5:
        dd = ref_min - move_max
    elif direction == 5:
        dd = ref_max - move_min
    elif direction == 2:
        center = (ref_max + ref_min)/2
        dd = center - move_min 
    elif direction == -2:
        center = (ref_max + ref_min)/2
        dd = center - move_max
    elif direction == 4:
        center = (move_max + move_min)/2
        dd = ref_max - center
    elif direction == -4:
        center = (move_max + move_min)/2
        dd = ref_min - center
    elif direction == 1:
        dd = (ref_max + ref_min)/2 - (move_max + move_min)/2
    return dd

dx = align(x_align, ref_shape.bounds.xmin, ref_shape.bounds.xmax, move_shape.bounds.xmin, move_shape.bounds.xmax)
dy = align(y_align, ref_shape.bounds.ymin, ref_shape.bounds.ymax, move_shape.bounds.ymin, move_shape.bounds.ymax)
dz = align(z_align, ref_shape.bounds.zmin, ref_shape.bounds.zmax, move_shape.bounds.zmin, move_shape.bounds.zmax)

output('dx',dx)
output('dy',dy)
output('dz',dz)

output('aligned', fab.shapes.translate(move_shape, dx, dy, dz))

